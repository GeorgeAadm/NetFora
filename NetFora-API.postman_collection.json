{
  "info": {
    "_postman_id": "netfora-api-collection",
    "name": "NetFora API",
    "description": "Complete API collection for NetFora forum application",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Auth",
      "item": [
        {
          "name": "Register New User",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "// Generate random username for testing",
                  "const randomNum = Math.floor(Math.random() * 100000);",
                  "pm.environment.set(\"test_username\", `testuser${randomNum}`);",
                  "pm.environment.set(\"test_email\", `testuser${randomNum}@example.com`);"
                ],
                "type": "text/javascript"
              }
            },
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.environment.set(\"auth_token\", jsonData.token);",
                  "    pm.environment.set(\"current_user_email\", jsonData.email);",
                  "    pm.environment.set(\"current_user_name\", pm.environment.get(\"test_username\"));",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{test_email}}\",\n  \"password\": \"Test123!\",\n  \"displayName\": \"Test User\",\n  \"userName\": \"{{test_username}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/register",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "register"]
            }
          }
        },
        {
          "name": "Login",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 200\", function () {",
                  "    pm.response.to.have.status(200);",
                  "});",
                  "",
                  "pm.test(\"Response has token\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.expect(jsonData).to.have.property('token');",
                  "    pm.environment.set(\"auth_token\", jsonData.token);",
                  "    pm.environment.set(\"current_user_email\", jsonData.email);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"{{current_user_email}}\",\n  \"password\": \"Test123!\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/auth/login",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "login"]
            }
          }
        },
        {
          "name": "Logout",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/auth/logout",
              "host": ["{{base_url}}"],
              "path": ["api", "auth", "logout"]
            }
          }
        }
      ]
    },
    {
      "name": "Posts",
      "item": [
        {
          "name": "Get All Posts",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts?page=1&pageSize=10&sortBy=CreatedDate&sortDirection=Descending",
              "host": ["{{base_url}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                },
                {
                  "key": "sortBy",
                  "value": "CreatedDate",
                  "description": "CreatedDate, LikeCount, CommentCount, Title, AuthorName"
                },
                {
                  "key": "sortDirection",
                  "value": "Descending",
                  "description": "Ascending or Descending"
                },
                {
                  "key": "searchTerm",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "authorUserName",
                  "value": "",
                  "disabled": true
                },
                {
                  "key": "minLikes",
                  "value": "0",
                  "disabled": true
                },
                {
                  "key": "hasComments",
                  "value": "true",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Get Posts by Author",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts?authorUserName={{current_user_name}}&page=1&pageSize=10",
              "host": ["{{base_url}}"],
              "path": ["api", "posts"],
              "query": [
                {
                  "key": "authorUserName",
                  "value": "{{current_user_name}}"
                },
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "10"
                }
              ]
            }
          }
        },
        {
          "name": "Get Post by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}"]
            }
          }
        },
        {
          "name": "Create Post",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Save post ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"post_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"title\": \"Test Post {{$randomInt}}\",\n  \"content\": \"This is a test post content created at {{$timestamp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/posts",
              "host": ["{{base_url}}"],
              "path": ["api", "posts"]
            }
          }
        }
      ]
    },
    {
      "name": "Comments",
      "item": [
        {
          "name": "Get Comments for Post",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/comments?page=1&pageSize=20",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}", "comments"],
              "query": [
                {
                  "key": "page",
                  "value": "1"
                },
                {
                  "key": "pageSize",
                  "value": "20"
                },
                {
                  "key": "sortBy",
                  "value": "CreatedDate",
                  "disabled": true
                },
                {
                  "key": "sortDirection",
                  "value": "Ascending",
                  "disabled": true
                }
              ]
            }
          }
        },
        {
          "name": "Get Comment by ID",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/comments/{{comment_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}", "comments", "{{comment_id}}"]
            }
          }
        },
        {
          "name": "Create Comment",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "pm.test(\"Status code is 201\", function () {",
                  "    pm.response.to.have.status(201);",
                  "});",
                  "",
                  "pm.test(\"Save comment ID\", function () {",
                  "    var jsonData = pm.response.json();",
                  "    pm.environment.set(\"comment_id\", jsonData.id);",
                  "});"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"postId\": {{post_id}},\n  \"content\": \"This is a test comment created at {{$timestamp}}\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/comments",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}", "comments"]
            }
          }
        }
      ]
    },
    {
      "name": "Likes",
      "item": [
        {
          "name": "Get Like Count",
          "request": {
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/likes/count",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}", "likes", "count"]
            }
          }
        },
        {
          "name": "Like Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "POST",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/likes",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}", "likes"]
            }
          }
        },
        {
          "name": "Unlike Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{auth_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "DELETE",
            "header": [],
            "url": {
              "raw": "{{base_url}}/api/posts/{{post_id}}/likes",
              "host": ["{{base_url}}"],
              "path": ["api", "posts", "{{post_id}}", "likes"]
            }
          }
        }
      ]
    },
    {
      "name": "Moderation",
      "item": [
        {
          "name": "Moderate Post",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{moderator_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"flags\": 1,\n  \"reason\": \"Misleading information\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/moderation/posts/{{post_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "moderation", "posts", "{{post_id}}"]
            },
            "description": "Flags: 0=None, 1=Misleading, 2=False"
          }
        },
        {
          "name": "Moderate Comment",
          "request": {
            "auth": {
              "type": "bearer",
              "bearer": [
                {
                  "key": "token",
                  "value": "{{moderator_token}}",
                  "type": "string"
                }
              ]
            },
            "method": "PUT",
            "header": [
              {
                "key": "Content-Type",
                "value": "application/json"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"flags\": 2,\n  \"reason\": \"False information\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/api/moderation/comments/{{comment_id}}",
              "host": ["{{base_url}}"],
              "path": ["api", "moderation", "comments", "{{comment_id}}"]
            }
          }
        }
      ]
    },
    {
      "name": "Test Scenarios",
      "item": [
        {
          "name": "Complete User Flow",
          "item": [
            {
              "name": "1. Register New User",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"email\": \"user{{$randomInt}}@example.com\",\n  \"password\": \"Test123!\",\n  \"displayName\": \"Test User {{$randomInt}}\",\n  \"userName\": \"testuser{{$randomInt}}\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/auth/register",
                  "host": ["{{base_url}}"],
                  "path": ["api", "auth", "register"]
                }
              }
            },
            {
              "name": "2. Create Post",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{auth_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"My First Post\",\n  \"content\": \"This is the content of my first post!\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/posts",
                  "host": ["{{base_url}}"],
                  "path": ["api", "posts"]
                }
              }
            },
            {
              "name": "3. Add Comment",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{auth_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"postId\": {{post_id}},\n  \"content\": \"Great post!\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/posts/{{post_id}}/comments",
                  "host": ["{{base_url}}"],
                  "path": ["api", "posts", "{{post_id}}", "comments"]
                }
              }
            },
            {
              "name": "4. Like Post",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{auth_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/posts/{{post_id}}/likes",
                  "host": ["{{base_url}}"],
                  "path": ["api", "posts", "{{post_id}}", "likes"]
                }
              }
            }
          ]
        },
        {
          "name": "Error Cases",
          "item": [
            {
              "name": "Unauthorized Request",
              "request": {
                "method": "POST",
                "header": [
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\n  \"title\": \"Should Fail\",\n  \"content\": \"This should return 401\"\n}"
                },
                "url": {
                  "raw": "{{base_url}}/api/posts",
                  "host": ["{{base_url}}"],
                  "path": ["api", "posts"]
                },
                "description": "Should return 401 Unauthorized"
              }
            },
            {
              "name": "Invalid Post ID",
              "request": {
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/posts/99999",
                  "host": ["{{base_url}}"],
                  "path": ["api", "posts", "99999"]
                },
                "description": "Should return 404 Not Found"
              }
            },
            {
              "name": "Like Own Post",
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "{{auth_token}}",
                      "type": "string"
                    }
                  ]
                },
                "method": "POST",
                "header": [],
                "url": {
                  "raw": "{{base_url}}/api/posts/{{post_id}}/likes",
                  "host": ["{{base_url}}"],
                  "path": ["api", "posts", "{{post_id}}", "likes"]
                },
                "description": "Should return 400 Bad Request (can't like own post)"
              }
            }
          ]
        }
      ]
    }
  ]
}